import streamlit as st
import pandas as pd
import yfinance as yf
from datetime import datetime, timedelta

st.set_page_config(page_title="AylÄ±k BIST YatÄ±rÄ±mÄ± SimÃ¼latÃ¶rÃ¼", layout="centered")
st.title("ğŸ’° AylÄ±k YatÄ±rÄ±m KÃ¢r Hesaplama")

stock_code = st.text_input("Hisse Kodu (Ã¶rnek: THYAO.IS)", value="THYAO.IS")
start_date = st.date_input("BaÅŸlangÄ±Ã§ Tarihi", value=datetime(2023, 1, 1))
end_date = st.date_input("BitiÅŸ Tarihi", value=datetime(2025, 1, 1))

if st.button("Excel OluÅŸtur"):
    try:
        dates = pd.date_range(start=start_date, end=end_date, freq='MS')

        stock_data = yf.download(stock_code, start=start_date, end=end_date + timedelta(days=1))
        fx_data = yf.download("USDTRY=X", start=start_date, end=end_date + timedelta(days=1))

        if stock_data.empty or fx_data.empty:
            st.warning("Veri alÄ±namadÄ±. Hisse kodu veya tarih aralÄ±ÄŸÄ±nÄ± kontrol edin.")
            st.stop()

        # Ay baÅŸÄ±na gÃ¶re yeniden Ã¶rnekleme ve tek boyutlu hale getirme
        stock_prices = stock_data['Close'].resample('MS').first().reindex(dates).squeeze()
        exchange_rates = fx_data['Close'].resample('MS').first().reindex(dates).squeeze()

        # DataFrame oluÅŸtur
        df = pd.DataFrame({
            "Tarih": dates,
            "Hisse FiyatÄ± (TL)": stock_prices.values,
            "Kur (USD/TRY)": exchange_rates.values
        })

        df.dropna(inplace=True)

        if df.empty:
            st.warning("Yeterli veri bulunamadÄ±. LÃ¼tfen tarih aralÄ±ÄŸÄ±nÄ± kontrol edin.")
            st.stop()

        final_price = float(df["Hisse FiyatÄ± (TL)"].iloc[-1])
        final_rate = float(df["Kur (USD/TRY)"].iloc[-1])

        df["YatÄ±rÄ±m (TL)"] = 10000
        df["AlÄ±nan Hisse"] = df["YatÄ±rÄ±m (TL)"] / df["Hisse FiyatÄ± (TL)"]
        df["Harcanan USD"] = df["YatÄ±rÄ±m (TL)"] / df["Kur (USD/TRY)"]
        df["BugÃ¼nkÃ¼ DeÄŸer (TL)"] = df["AlÄ±nan Hisse"] * final_price
        df["BugÃ¼nkÃ¼ DeÄŸer (USD)"] = df["BugÃ¼nkÃ¼ DeÄŸer (TL)"] / final_rate

        total_invested = df["Harcanan USD"].sum()
        total_now = df["BugÃ¼nkÃ¼ DeÄŸer (USD)"].sum()
        total_profit = total_now - total_invested

        st.success(f"Toplam USD kÃ¢rÄ±: {total_profit:.2f} $")

        file_name = f"bist_kar_{stock_code.replace('.', '_')}.xlsx"
        df.to_excel(file_name, index=False)

        with open(file_name, "rb") as f:
            st.download_button(
                label="Excel Ä°ndir",
                data=f,
                file_name=file_name,
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )

    except Exception as e:
        st.error(f"Hata oluÅŸtu: {str(e)}")
